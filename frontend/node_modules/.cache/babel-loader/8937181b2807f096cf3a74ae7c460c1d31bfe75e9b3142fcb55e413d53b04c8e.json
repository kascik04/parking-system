{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kasick\\\\Desktop\\\\CODE\\\\Project\\\\parking-system\\\\frontend\\\\src\\\\components\\\\DashboardStats.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DashboardStats() {\n  _s();\n  const [stats, setStats] = useState({\n    blocks: 0,\n    slots: 0,\n    lanes: 0\n  });\n  useEffect(() => {\n    fetchStats();\n  }, []);\n  const fetchStats = async () => {\n    try {\n      const [blockRes, slotRes, laneRes] = await Promise.all([axios.get('http://localhost:8080/api/blocks'), axios.get('http://localhost:8080/api/slots'), axios.get('http://localhost:8080/api/lanes')]);\n      setStats({\n        blocks: blockRes.data.length,\n        slots: slotRes.data.length,\n        lanes: laneRes.data.length\n      });\n    } catch (err) {\n      console.error('Failed to fetch dashboard stats', err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid grid-cols-1 md:grid-cols-3 gap-4 mb-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-orange-100 text-orange-800 p-4 rounded shadow text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-xl font-semibold\",\n        children: \"Total Blocks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-2xl font-bold\",\n        children: stats.blocks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-green-100 text-green-800 p-4 rounded shadow text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-xl font-semibold\",\n        children: \"Total Slots\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-2xl font-bold\",\n        children: stats.slots\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-blue-100 text-blue-800 p-4 rounded shadow text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-xl font-semibold\",\n        children: \"Total Lanes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-2xl font-bold\",\n        children: stats.lanes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(DashboardStats, \"nmb7kNl3YVVnk/JZwq/0Ac6pI3g=\");\n_c = DashboardStats;\nexport default DashboardStats;\nvar _c;\n$RefreshReg$(_c, \"DashboardStats\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","DashboardStats","_s","stats","setStats","blocks","slots","lanes","fetchStats","blockRes","slotRes","laneRes","Promise","all","get","data","length","err","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/kasick/Desktop/CODE/Project/parking-system/frontend/src/components/DashboardStats.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction DashboardStats() {\r\n  const [stats, setStats] = useState({\r\n    blocks: 0,\r\n    slots: 0,\r\n    lanes: 0,\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetchStats();\r\n  }, []);\r\n\r\n  const fetchStats = async () => {\r\n    try {\r\n      const [blockRes, slotRes, laneRes] = await Promise.all([\r\n        axios.get('http://localhost:8080/api/blocks'),\r\n        axios.get('http://localhost:8080/api/slots'),\r\n        axios.get('http://localhost:8080/api/lanes')\r\n      ]);\r\n\r\n      setStats({\r\n        blocks: blockRes.data.length,\r\n        slots: slotRes.data.length,\r\n        lanes: laneRes.data.length\r\n      });\r\n    } catch (err) {\r\n      console.error('Failed to fetch dashboard stats', err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-6\">\r\n      <div className=\"bg-orange-100 text-orange-800 p-4 rounded shadow text-center\">\r\n        <h3 className=\"text-xl font-semibold\">Total Blocks</h3>\r\n        <p className=\"text-2xl font-bold\">{stats.blocks}</p>\r\n      </div>\r\n      <div className=\"bg-green-100 text-green-800 p-4 rounded shadow text-center\">\r\n        <h3 className=\"text-xl font-semibold\">Total Slots</h3>\r\n        <p className=\"text-2xl font-bold\">{stats.slots}</p>\r\n      </div>\r\n      <div className=\"bg-blue-100 text-blue-800 p-4 rounded shadow text-center\">\r\n        <h3 className=\"text-xl font-semibold\">Total Lanes</h3>\r\n        <p className=\"text-2xl font-bold\">{stats.lanes}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DashboardStats;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}